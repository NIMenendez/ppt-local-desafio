{"mappings":"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","sources":["<anon>","src/index.ts","src/components/star/star.ts","src/components/button/button.ts","src/components/score/score.ts","src/components/text/text.ts","src/router.ts","src/pages/inicio/inicio.ts","src/pages/instrucciones/instrucciones.ts","src/state.ts","src/pages/juego/juego.ts","src/pages/resultado/resultado.ts"],"sourcesContent":["class $5adc3fffbb88e8b9$var$Estrella extends HTMLElement {\n    static get style() {\n        return /*CSS*/ `\n    .container {\n        position: relative;\n        width: 380px;\n        height: 380px;\n      }\n      .estrella-text {\n        font-family: var(--fuete-odibee);\n        letter-spacing: 0.5rem;\n        font-size: 2.2rem;\n        z-index: 2;\n        color: #ffffff; /* Cambiar el color del texto a blanco para que contraste con el fondo rojo */\n        position: absolute;\n        top: 35%; /* Centrar verticalmente */\n        left: 48%; /* Centrar horizontalmente */\n        transform: translate(\n          -50%,\n          -50%\n        ); /* Ajustar para que el centro del texto coincida con el centro de la estrella */\n      }\n      .estrella {\n        position: absolute;\n        z-index: 1;\n        width: 330px;\n        height: 330px;\n        top: 14px;\n        bottom: auto;\n        left: 14px;\n        right: 0px;\n        background-color: var(--estrella-win);\n        clip-path: polygon(\n          50% 0%,\n          67% 28%,\n          98% 35%,\n          79% 55%,\n          93% 100%,\n          52% 79%,\n          10% 100%,\n          23% 60%,\n          2% 35%,\n          33% 26%\n        );\n      }\n      .estrella2 {\n        width: 360px;\n        height: 360px;\n        background-color: rgb(15, 15, 15);\n        clip-path: polygon(\n          50% 0%,\n          67% 28%,\n          98% 35%,\n          79% 55%,\n          93% 100%,\n          52% 79%,\n          10% 100%,\n          23% 60%,\n          2% 35%,\n          33% 26%\n        );\n      }     \n      .estrella-invertida{\n        transform: rotatex(180deg);  \n        background-color: var(--estrella-loser);\n     \n      } \n      .estrella-invertida2{\n        transform: rotatex(180deg);  \n        background-color: black;\n      }   \n       `;\n    }\n    constructor(){\n        super();\n        this.attachShadow({\n            mode: \"open\"\n        });\n    }\n    connectedCallback() {\n        this.shadowRoot.innerHTML = /*HTML*/ `\n    <style>${$5adc3fffbb88e8b9$var$Estrella.style}</style>\n    <div class=\"container\">\n      <div class=\"estrella\"></div>\n      <div class=\"estrella2\"></div>\n      <h3 class=\"estrella-text\">Ganaste!</h3>\n    </div>\n    `;\n        // const contenedorEstrella = this.shadowRoot!.querySelector(\".container\");\n        if (this.hasAttribute(\"invertida\")) {\n            const estrella = this.shadowRoot.querySelector(\".estrella\");\n            const estrella2 = this.shadowRoot.querySelector(\".estrella2\");\n            const estrellaText = this.shadowRoot.querySelector(\".estrella-text\");\n            estrella.setAttribute(\"class\", \"estrella estrella-invertida\");\n            estrella2.setAttribute(\"class\", \"estrella2 estrella-invertida2\");\n            estrellaText.textContent = \"Perdiste!\";\n        }\n    }\n}\ncustomElements.define(\"estrella-el\", $5adc3fffbb88e8b9$var$Estrella);\n\n\nclass $29582e87b2b7e4fd$var$ButtonEl extends HTMLElement {\n    static get style() {\n        return `\n    button {\n        font-family: var(--fuente-odibee);\n        font-size: 3rem;\n        letter-spacing: 0.15rem;\n        color: var(--button-font);\n        min-width: 380px;\n        height: 84px;\n        background-color: var(--color-button);\n        border: solid 10px var(--color-borderbutton);\n        border-radius: 10px;\n        transition: ease-in-out 0.25s;\n        cursor: pointer;\n      }\n      button:hover {\n        background-color: var(--color-borderbutton);\n        border: solid 10px var(--color-button);\n      }\n    `;\n    }\n    constructor(){\n        super();\n        this.attachShadow({\n            mode: \"open\"\n        });\n    }\n    connectedCallback() {\n        const clase = this.getAttribute(\"class\");\n        this.shadowRoot.innerHTML = `\n    <style>${$29582e87b2b7e4fd$var$ButtonEl.style}</style>\n    <button class=\"${clase}\"><slot></slot></button>\n\n    `;\n    }\n}\ncustomElements.define(\"button-el\", $29582e87b2b7e4fd$var$ButtonEl);\n\n\nclass $8e53913ea5888066$var$ScoreEl extends HTMLElement {\n    static get style() {\n        return `\n    .container {\n        box-sizing: border-box;\n        font-family: var(--fuente-odibee);\n        font-size: 1.5rem;\n        width: 259px;\n        height: 187px;\n        background-color: white;\n        color: black;\n        border: solid 10px black;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        padding: 10px;\n        margin: 0;\n      }\n      .container h3 {\n        /* margin: 0; */\n        text-align: center;\n        letter-spacing: 0.5rem;\n        margin-top: 10px;\n      }\n      .container-p {\n        flex-grow: 1;\n        width: 100%;\n        height: 140px;\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n      }\n      .p-pc,\n      .p-player {\n        margin: 0;\n        text-align: end;\n        letter-spacing: 0.5rem;\n      }\n    `;\n    }\n    constructor(){\n        super();\n        this.attachShadow({\n            mode: \"open\"\n        });\n    }\n    connectedCallback() {\n        this.shadowRoot.innerHTML = /*HTML*/ `\n    <style>${$8e53913ea5888066$var$ScoreEl.style}</style>\n    <div class=\"container\">\n      <h3>Score</h3>\n      <div class=\"container-p\">\n        <p class=\"p-player\">Vos: 3</p>\n        <p class=\"p-pc\">PC: 3</p>\n      </div>\n    </div>\n    `;\n    }\n}\ncustomElements.define(\"score-el\", $8e53913ea5888066$var$ScoreEl);\n\n\nclass $4b0752ccf955da36$var$TextEl extends HTMLElement {\n    static get style() {\n        return ``;\n    }\n    constructor(){\n        super(), this.tags = [\n            \"h1\",\n            \"p\"\n        ], this.tag = \"p\";\n        this.attachShadow({\n            mode: \"open\"\n        });\n        if (this.tags.includes(this.getAttribute(\"tag\"))) this.tag = this.getAttribute(\"tag\") || this.tag;\n        console.log(this.tag);\n        this.render();\n    }\n    render() {\n        const rootEl = document.createElement(this.tag);\n        rootEl.textContent = this.textContent;\n        this.shadowRoot.append(rootEl);\n    }\n}\ncustomElements.define(\"text-el\", $4b0752ccf955da36$var$TextEl);\n\n\n// Importar las páginas\n\nfunction $0ed12640338c7687$export$8a39893ac75b3cff(params) {\n    const div = document.createElement(\"div\");\n    div.innerHTML = `\n  <style>\n  .contenedor{\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n  }\n  .title {\n    margin-top: 20px;\n    margin-bottom: 25px;\n    padding: 20px;\n    width: 380px;\n    height: 330px;\n    overflow-wrap: anywhere;\n  }\n  .title h1 {\n    text-align: center;\n    margin: 0;\n    font-family: var(--fuente-odibee);\n    letter-spacing: 0.25rem;\n    font-size: 5.5rem;\n    color: var(--color-h1);\n  }\n  \n  .title h1 span {\n    color: #0090485a;\n  }\n  .div-button{\n    height: 100px;    \n  }\n  .container-manos {\n    padding: 0 10px;\n    min-width: 370px;\n    position: fixed;\n    display: flex;\n    bottom: -40px;\n    flex-direction: row;\n    gap: 40px;\n  }\n  .container-manos img {\n    width: 100px;\n    height: 250px;\n  }\n  </style>\n  <div class=\"contenedor\">\n  <div class=\"title\">\n  <h1>\n    Piedra<br />\n    Papel <span>\\xf3</span> <br />Tijera\n  </h1>\n</div>\n<div class=\"div-button\">\n<button-el>Empezar!</button-el>\n</div>\n<div class=\"container-manos\">\n  <img src=\"/ppt-local/assets/papel.svg\" alt=\"\" />\n  <img src=\"/ppt-local/assets/piedra.svg\" alt=\"\" />\n  <img src=\"/ppt-local/assets/tijera.svg\" alt=\"\" />\n</div>\n</div>\n  `;\n    const buttonEl = div.querySelector(\"button-el\");\n    buttonEl?.addEventListener(\"click\", ()=>{\n        params.goTo(\"/instrucciones\");\n    });\n    return div;\n}\n\n\nconst $0b89d474933103bc$export$ca000e230c0caa3e = {\n    data: {\n        currentGame: {\n            clientMove: null,\n            pcMove: null\n        },\n        historyByTurn: [],\n        scores: {\n            myScore: 0,\n            pcScore: 0\n        }\n    },\n    subscribers: [],\n    subscribe (callback) {\n        this.subscribers.push(callback);\n    },\n    getState () {\n        return this.data;\n    },\n    setState (newState) {\n        this.data = {\n            ...this.data,\n            ...newState,\n            currentGame: {\n                ...this.data.currentGame,\n                ...newState.currentGame || {}\n            },\n            scores: {\n                ...this.data.scores,\n                ...newState.scores || {}\n            }\n        };\n        this.subscribers.forEach((callback)=>callback(this.data));\n        // ✅ Guardar siempre en localStorage\n        this.saveToLocalStorage();\n    },\n    setMoves (move) {\n        const pcMove = this.getRandomMove();\n        this.setState({\n            currentGame: {\n                clientMove: move,\n                pcMove: pcMove\n            }\n        });\n    },\n    getRandomMove () {\n        const moves = [\n            \"rock\",\n            \"paper\",\n            \"scissors\"\n        ];\n        return moves[Math.floor(Math.random() * moves.length)];\n    },\n    pushToHistory (turn) {\n        const newHistory = [\n            ...this.data.historyByTurn,\n            turn\n        ];\n        this.setState({\n            historyByTurn: newHistory\n        });\n    },\n    getWinner (clientMove, pcMove) {\n        if (clientMove === pcMove) return \"tie\";\n        const winsAgainst = {\n            rock: \"scissors\",\n            paper: \"rock\",\n            scissors: \"paper\"\n        };\n        if (winsAgainst[clientMove] === pcMove) return \"clientWins\";\n        else return \"pcWins\";\n    },\n    playGame (playerChoice) {\n        if (this.data.currentGame.pcMove === null) return; // seguridad\n        const winner = this.getWinner(playerChoice, this.data.currentGame.pcMove);\n        if (winner === \"clientWins\") this.setState({\n            scores: {\n                myScore: this.data.scores.myScore + 1\n            }\n        });\n        else if (winner === \"pcWins\") this.setState({\n            scores: {\n                pcScore: this.data.scores.pcScore + 1\n            }\n        });\n    },\n    saveToLocalStorage () {\n        localStorage.setItem('gameState', JSON.stringify(this.data));\n    },\n    loadFromLocalStorage () {\n        const savedState = localStorage.getItem('gameState');\n        if (savedState) {\n            this.data = JSON.parse(savedState);\n            this.subscribers.forEach((callback)=>callback(this.data));\n        }\n    },\n    // ✅ Método para reiniciar scores solo cuando vos quieras\n    resetScores () {\n        this.setState({\n            scores: {\n                myScore: 0,\n                pcScore: 0\n            }\n        });\n    }\n};\n\n\nfunction $93cdb531e5b04c75$export$a068bb4ca7cb2384(params) {\n    let div = document.createElement(\"div\");\n    div.innerHTML = /*html*/ `\n  <style>\n    .container {\n      height: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n.div-text {\n  width: 317px;\n  height: 380px;\n}\n.div-text-p {\n  font-family: var(--fuente-odibee);\n  font-size: 2.7rem;\n  letter-spacing: 0.11rem;\n  font-weight: 800;\n  text-align: center;\n}\n.div-button {\n  \n  height: 100px;\n}\n.container-manos {\n  padding: 0 10px;\n  min-width: 370px;\n  position: fixed;\n  display: flex;\n  bottom: -40px;\n  flex-direction: row;\n  gap: 40px;\n}\n.container-manos img {\n  width: 100px;\n  height: 250px;\n}\n</style>\n  <div class=\"container\">\n      <div class=\"div-text\">\n        <p class=\"div-text-p\">\n          Presion\\xe1 jugar y eleg\\xed: piedra, papel o tijera antes de que pasen los\n          3 segundos. <br> El primero en llegar a 2 puntos gana el juego\n        </p>\n      </div>\n      <div class=\"button\">\n        <button-el>Jugar!</button-el>\n      </div>\n      <div class=\"container-manos\">\n        <img src=\"/ppt-local/assets/papel.svg\"/>\n        <img src=\"/ppt-local/assets/piedra.svg\"/>\n        <img src=\"/ppt-local/assets/tijera.svg\"/>\n      </div>\n  </div>\n  `;\n    const buttonEl = div.querySelector(\"button-el\");\n    (0, $0b89d474933103bc$export$ca000e230c0caa3e).data.scores.pcScore = 0;\n    (0, $0b89d474933103bc$export$ca000e230c0caa3e).data.scores.myScore = 0;\n    buttonEl?.addEventListener(\"click\", ()=>{\n        params.goTo(\"/juego\");\n    });\n    return div;\n}\n\n\n\nfunction $18d0dd999a259d4d$export$3c7b3ae50691831f(params) {\n    const divEl = document.createElement(\"div\");\n    divEl.innerHTML = /*HTML */ `\n    <style>\n      /* Estilos como los que ten\\xedas anteriormente */\n      .principal {\n        display: flex;\n        flex-direction: column;\n        justify-content: space-between;\n        align-items: center;\n        \n      }\n      .progressbar-container {\n        width: 400px;\n        height: 400px;\n        margin: 0px auto;\n      }\n      .progressbar-container .outer-box {\n        border-radius: 50%;\n        background-color: transparent;\n        width: 400px;\n        height: 400px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      .progressbar-container .inner-box {\n        font-size: 12rem;\n        font-weight: 900;\n        width: 180px;\n        height: 0px;\n        border-radius: 50%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      .progressbar-container svg {\n        position: absolute;\n      }\n      .progressbar-container circle {\n        fill: none;\n        stroke: url(#gradientColor);\n        stroke-width: 30px;\n        stroke-dasharray: 1040;\n        stroke-dashoffset: 1040;\n        animation: loading 3.3s linear forwards;\n      }\n      @keyframes loading {\n        100% {\n          stroke-dashoffset: 0;\n        }\n      }\n      .elige {\n        font-size: 2rem;\n        font-family: var(--fuente-odibee);\n        text-align: center;\n        margin: 0;\n      }\n      .my-score, .computer-score {font-family: var(--fuente-odibee);}\n      .container-manos {\n        position: fixed;\n        bottom: -80px;\n        display: flex;\n        justify-content: space-between;\n        max-width: 450px;\n      }\n      .general {\n        border: none;\n        background-color: transparent;\n        cursor: pointer;\n        width: 150px;\n        height: 300px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      }\n      .piedra, .papel, .tijera {\n        width: 100px;\n        height: 300px;\n       \n        \n        width: 100px;\n        height: 300px;\n        transform: scale(1) translateY(0); /* Estado inicial */\n        transition: transform 0.3s ease-in-out; /* Transici\\xf3n suave para ambas transformaciones */ \n          }\n        .general:hover .piedra,\n        .general:hover .papel,\n        .general:hover .tijera {\n          transform: scale(1.2) translateY(-40px); /* Se agranda un 20% al hacer click */\n        }\n        .piedra.active,\n        .papel.active,\n        .tijera.active {\n          transform: scale(1.2) translateY(-40px); /* Se agranda un 20% al hacer click */\n        }\n        .general .piedra,\n        .general .papel,\n        .general .tijera {\n           transition: transform 0.3s ease-in-out;\n        }\n\n        .general.active .piedra,\n        .general.active .papel,\n        .general.active .tijera {\n          transform: scale(1.2) translateY(-40px); /* Se mantiene desplazada */\n          }\n        .secundario {\n        width: 100%;\n        height: 100vh;\n        display: none;\n        flex-direction: column;\n        align-items: center;\n        justify-content: space-between;\n      }\n      .div-img-maquina, .div-img-jugador {\n        width: 400px;\n        height: 400px;\n      }\n      .div-img-maquina {\n        width: 400px;\n        height: 400px;\n        transform: rotate(180deg);\n      }\n      .imagen-maquina, .imagen-jugador {\n        width: 400px;\n        height: 400px;\n      }\n      .my-score, .computer-score {\n        font-size: 2rem;\n      }\n    </style>\n    <div class=\"principal\">\n      <div class=\"progressbar-container\">\n        <div class=\"outer-box\">\n          <div class=\"inner-box\">3</div>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"400\" height=\"400\">\n            <defs>\n              <linearGradient id=\"gradientColor\">\n                <stop offset=\"0%\" stop-color=\"#006cfc\" />\n                <stop offset=\"100%\" stop-color=\"#001997\" />\n              </linearGradient>\n            </defs>\n            <circle cx=\"200\" cy=\"200\" r=\"160\" stroke-linecap=\"round\" />\n          </svg>\n        </div>\n      </div>\n      <h3 class=\"elige\">Elige tu jugada antes de que se termina el tiempo!</h3>\n      <div class=\"container-manos\">\n        <button class=\"general\">\n          <img class=\"piedra\" src=\"/ppt-local/assets/piedra.svg\" alt=\"\" />\n        </button>\n        <button class=\"general\" >\n          <img class=\"papel\" src=\"/ppt-local/assets/papel.svg\" alt=\"\" />\n        </button>\n        <button class=\"general\" >\n          <img class=\"tijera\" src=\"/ppt-local/assets/tijera.svg\" alt=\"\" />\n        </button>\n      </div>\n      <div class=\"my-score\">Jugador: <span></span></div>\n      <div class=\"computer-score\"> Computadora: <span></span></div>\n    </div>\n    <div class=\"secundario\">\n      <div class=\"div-img-maquina\">\n        <img class=\"imagen-maquina\" src=\"/ppt-local/assets/papel.svg\" alt=\"\" />\n      </div>\n      \n      <div class=\"div-img-jugador\">\n        <img class=\"imagen-jugador\" src=\"/ppt-local/assets/papel.svg\" alt=\"\" />\n      </div>\n    </div>\n  `;\n    // Aquí empieza la lógica\n    const botonPiedra = divEl.querySelector(\".container-manos button img.piedra\");\n    const botonPapel = divEl.querySelector(\".container-manos button img.papel\");\n    const botonTijera = divEl.querySelector(\".container-manos button img.tijera\");\n    const divPrincipal = divEl.querySelector(\".principal\");\n    const divSecundario = divEl.querySelector(\".secundario\");\n    const imagenPc = divEl.querySelector(\".imagen-maquina\");\n    const imagenJugador = divEl.querySelector(\".imagen-jugador\");\n    // ✅ Elementos del score\n    const myScoreEl = divEl.querySelector(\".my-score span\");\n    const computerScoreEl = divEl.querySelector(\".computer-score span\");\n    // Suscripción al state\n    (0, $0b89d474933103bc$export$ca000e230c0caa3e).subscribe(()=>{\n        const currentState = (0, $0b89d474933103bc$export$ca000e230c0caa3e).getState();\n        myScoreEl.textContent = currentState.scores.myScore.toString();\n        computerScoreEl.textContent = currentState.scores.pcScore.toString();\n    });\n    // ✅ Refresh inicial de scores apenas se monta la vista\n    (()=>{\n        const currentState = (0, $0b89d474933103bc$export$ca000e230c0caa3e).getState();\n        myScoreEl.textContent = currentState.scores.myScore.toString();\n        computerScoreEl.textContent = currentState.scores.pcScore.toString();\n    })();\n    function handleMoveSelection(jugada) {\n        (0, $0b89d474933103bc$export$ca000e230c0caa3e).setMoves(jugada);\n        const pcMove = (0, $0b89d474933103bc$export$ca000e230c0caa3e).data.currentGame.pcMove;\n        imagenPc.src = `/ppt-local/assets/${pcMove}.svg`;\n        imagenJugador.src = `/ppt-local/assets/${jugada}.svg`;\n        (0, $0b89d474933103bc$export$ca000e230c0caa3e).playGame(jugada);\n        const botones = divEl.querySelectorAll(\".general\");\n        botones.forEach((boton)=>boton.classList.remove(\"active\"));\n        const botonSeleccionado = divEl.querySelector(`.general img.${jugada}`)?.parentElement;\n        if (botonSeleccionado) botonSeleccionado.classList.add(\"active\");\n        botones.forEach((boton)=>{\n            boton.disabled = true;\n            boton.style.pointerEvents = `none`;\n        });\n    }\n    setTimeout(()=>{\n        const currentState = (0, $0b89d474933103bc$export$ca000e230c0caa3e).getState();\n        if (currentState.scores.pcScore == 2 || currentState.scores.myScore == 2) params.goTo(\"/resultado\");\n        else params.goTo(\"/juego\");\n    }, 5000);\n    // Listeners de los botones\n    botonPiedra.addEventListener(\"click\", ()=>handleMoveSelection(\"rock\"));\n    botonPapel.addEventListener(\"click\", ()=>handleMoveSelection(\"paper\"));\n    botonTijera.addEventListener(\"click\", ()=>handleMoveSelection(\"scissors\"));\n    function actualizarContador() {\n        const contador = document.querySelector(\".inner-box\");\n        let valorActual = Number(contador.innerText);\n        if (valorActual > -2) contador.innerText = (valorActual - 1).toString();\n        if (valorActual <= 0) {\n            divSecundario.style.display = \"flex\";\n            divPrincipal.style.display = \"none\";\n            clearInterval(intervalo);\n        }\n    }\n    const intervalo = setInterval(actualizarContador, 1000);\n    return divEl;\n}\n\n\n\nfunction $77b74d150ce9169a$export$e30b15a3bdda2124(params) {\n    const divEl = document.createElement(\"div\");\n    divEl.innerHTML = /*HTML */ `\n  <style>.ganaste {\n  /* display: none; */\n  height: 100vh;\n  background-color: var(--background-win);\n  display: none;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n}\n.container {\n  box-sizing: border-box;\n  font-family: var(--fuente-odibee);\n  font-size: 1.5rem;\n  width: 259px;\n  height: 187px;\n  background-color: white;\n  color: black;\n  border: solid 10px black;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 10px;\n  margin: 0;\n}\n.container h3 {\n  /* margin: 0; */\n  text-align: center;\n  letter-spacing: 0.5rem;\n }\n.container-p {\n  flex-grow: 1;\n  width: 100%;\n  height: 140px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n.p-maquina,\n.p-persona {\n  margin: 0;\n  text-align: end;\n  letter-spacing: 0.5rem;\n}\n/*  */\n.perdiste {\n  height: 100vh;\n  background-color: var(--background-loser);\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  padding-bottom: 50px;\n}\n.contenedor {\n  box-sizing: border-box;\n  font-family: var(--fuente-odibee);\n  font-size: 1.5rem;\n  width: 259px;\n  height: 187px;\n  background-color: white;\n  color: black;\n  border: solid 10px black;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 10px;\n  margin: 0;\n}\n.contenedor h3 {\n  text-align: center;\n  letter-spacing: 0.5rem;\n  margin-top: 10px;\n}\n.contenedor-p {\n  flex-grow: 1;\n  width: 100%;\n  height: 140px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n.parrafo-maquina,\n.parrafo-persona {\n  margin: 0;\n  text-align: end;\n  letter-spacing: 0.5rem;\n}\n  </style>\n  <div class=\"ganaste\">\n  <estrella-el></estrella-el>\n  <div class=\"container\">\n    <h3>Score</h3>\n    <div class=\"container-p\">\n      <p class=\"p-persona\">Vos: 3</p>\n      <p class=\"p-maquina\">Maquina: 3</p>\n    </div>\n  </div>\n   <button-el>Volver a Jugar!</button-el>  \n   <!--   <button-el>Ir al Inicio!</button-el>\n  -->\n  </div>\n  <!--  -->\n  <div class=\"perdiste\">\n  <estrella-el invertida></estrella-el>\n  <div class=\"contenedor\">\n    <h3>Score</h3>\n    <div class=\"contenedor-p\">\n    <p class=\"parrafo-persona\">Vos: 3</p>\n    <p class=\"parrafo-maquina\">Maquina: 3</p>\n    </div>\n    </div>\n    <button-el class=\"volver-jugar\">Volver a Jugar!</button-el>\n    <!-- <button-el>Ir al Inicio!</button-el>  -->\n\n  \n</div>\n  `;\n    const volverAlInicio = divEl.querySelector(\"button-el\");\n    volverAlInicio.addEventListener(\"click\", ()=>{\n        params.goTo(\"/inicio\");\n    });\n    const volverAlInicioDos = divEl.querySelector(\".volver-jugar\");\n    volverAlInicioDos.addEventListener(\"click\", ()=>{\n        params.goTo(\"/inicio\");\n    });\n    // localStorage.removeItem(\"saved-state\");\n    let newCurrentState = (0, $0b89d474933103bc$export$ca000e230c0caa3e).getState();\n    const pPersona = divEl.querySelector(\".p-persona\");\n    pPersona.textContent = `Vos: ${newCurrentState.scores.myScore}`;\n    const pMaquina = divEl.querySelector(\".p-maquina\");\n    pMaquina.textContent = `Maquina: ${newCurrentState.scores.pcScore}`;\n    const parrafoPersona = divEl.querySelector(\".parrafo-persona\");\n    parrafoPersona.textContent = `Vos: ${newCurrentState.scores.myScore}`;\n    const parrafoMaquina = divEl.querySelector(\".parrafo-maquina\");\n    parrafoMaquina.textContent = `Maquina: ${newCurrentState.scores.pcScore}`;\n    // Suponiendo que tienes una variable que indica si el jugador ganó o perdió\n    let juegoGanado;\n    if (newCurrentState.scores.pcScore > newCurrentState.scores.myScore) juegoGanado = false;\n    else juegoGanado = true;\n    const mostrarDivGanaste = divEl.querySelector(\".ganaste\");\n    const mostrarDivPerdiste = divEl.querySelector(\".perdiste\");\n    if (juegoGanado) {\n        mostrarDivGanaste.style.display = \"flex\"; // Muestra el div de ganaste\n        mostrarDivPerdiste.style.display = \"none\"; // Oculta el div de perdido\n    } else {\n        mostrarDivGanaste.style.display = \"none\"; // Oculta el div de ganado\n        mostrarDivPerdiste.style.display = \"flex\"; // Muestra el div de perdido\n    }\n    return divEl;\n}\n\n\nconst $e817d3341cf3ea9c$var$BASE_PATH = \"/ppt-local-desafio\";\nfunction $e817d3341cf3ea9c$var$isGithubPages() {\n    return location.host.includes(\"github.io\");\n}\n// Definición de rutas\nconst $e817d3341cf3ea9c$var$routes = [\n    {\n        pathRegex: /^\\/inicio$/,\n        render: ()=>(0, $0ed12640338c7687$export$8a39893ac75b3cff)({\n                goTo: $e817d3341cf3ea9c$export$95e8d77caafa3e06\n            })\n    },\n    {\n        pathRegex: /^\\/instrucciones$/,\n        render: ()=>(0, $93cdb531e5b04c75$export$a068bb4ca7cb2384)({\n                goTo: $e817d3341cf3ea9c$export$95e8d77caafa3e06\n            })\n    },\n    {\n        pathRegex: /^\\/juego$/,\n        render: ()=>(0, $18d0dd999a259d4d$export$3c7b3ae50691831f)({\n                goTo: $e817d3341cf3ea9c$export$95e8d77caafa3e06\n            })\n    },\n    {\n        pathRegex: /^\\/resultado$/,\n        render: ()=>(0, $77b74d150ce9169a$export$e30b15a3bdda2124)({\n                goTo: $e817d3341cf3ea9c$export$95e8d77caafa3e06\n            })\n    },\n    {\n        pathRegex: /.*/,\n        render: ()=>{\n            const notFound = document.createElement('div');\n            notFound.innerHTML = \"<h1>404 - P\\xe1gina no encontrada</h1>\";\n            return notFound;\n        }\n    }\n];\n// Función para navegar\nfunction $e817d3341cf3ea9c$export$95e8d77caafa3e06(path) {\n    const normalizedPath = path.startsWith(\"/\") ? path : \"/\" + path;\n    const completePath = $e817d3341cf3ea9c$var$isGithubPages() ? $e817d3341cf3ea9c$var$BASE_PATH + normalizedPath : normalizedPath;\n    history.pushState({}, \"\", completePath);\n    $e817d3341cf3ea9c$var$renderPath(completePath);\n}\n// Función para renderizar según la ruta\nfunction $e817d3341cf3ea9c$var$renderPath(path) {\n    let adjustedPath = path;\n    if ($e817d3341cf3ea9c$var$isGithubPages()) {\n        // Quitar BASE_PATH al inicio\n        if (adjustedPath.startsWith($e817d3341cf3ea9c$var$BASE_PATH)) adjustedPath = adjustedPath.slice($e817d3341cf3ea9c$var$BASE_PATH.length);\n        // Asegurar slash inicial\n        if (!adjustedPath.startsWith(\"/\")) adjustedPath = \"/\" + adjustedPath;\n    }\n    // Quitar trailing slash\n    adjustedPath = adjustedPath.replace(/\\/$/, \"\");\n    const route = $e817d3341cf3ea9c$var$routes.find((r)=>r.pathRegex.test(adjustedPath));\n    if (route) {\n        const app = document.getElementById(\"app\");\n        if (app) {\n            app.innerHTML = \"\";\n            app.appendChild(route.render({\n                goTo: $e817d3341cf3ea9c$export$95e8d77caafa3e06\n            }));\n        }\n    } else console.warn(`El path '${adjustedPath}' no fue encontrado.`);\n}\n// Inicializa router al cargar la página\nfunction $e817d3341cf3ea9c$export$cf7ee87ede64229c() {\n    const pathname = location.pathname.replace(/\\/$/, \"\");\n    if ($e817d3341cf3ea9c$var$isGithubPages() && (pathname === $e817d3341cf3ea9c$var$BASE_PATH || pathname === $e817d3341cf3ea9c$var$BASE_PATH + \"/\")) $e817d3341cf3ea9c$export$95e8d77caafa3e06(\"/inicio\");\n    else if (!$e817d3341cf3ea9c$var$isGithubPages() && (pathname === \"\" || pathname === \"/\")) $e817d3341cf3ea9c$export$95e8d77caafa3e06(\"/inicio\");\n    else $e817d3341cf3ea9c$var$renderPath(pathname);\n    // Escucha cambios del historial\n    window.addEventListener(\"popstate\", ()=>$e817d3341cf3ea9c$var$renderPath(location.pathname));\n}\n\n\n(function main() {\n    let app = document.querySelector(\"#app\");\n    if (!app) throw new Error(\"Elemento #app no encontrado\");\n    (0, $e817d3341cf3ea9c$export$cf7ee87ede64229c)(app);\n})();\n\n\n//# sourceMappingURL=ppt-local.75d63a30.js.map\n","import \"./components/star/star\";\r\nimport \"./components/button/button\";\r\nimport \"./components/score/score\";\r\nimport \"./components/text/text\";\r\nimport { initRouter } from \"./router\";\r\n\r\n(function main() {\r\n  let app: HTMLDivElement = document.querySelector(\"#app\")!;\r\n  if (!app) {\r\n    throw new Error(\"Elemento #app no encontrado\");\r\n  }\r\n  initRouter(app);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","class Estrella extends HTMLElement {\r\n  static get style() {\r\n    return /*CSS*/ `\r\n    .container {\r\n        position: relative;\r\n        width: 380px;\r\n        height: 380px;\r\n      }\r\n      .estrella-text {\r\n        font-family: var(--fuete-odibee);\r\n        letter-spacing: 0.5rem;\r\n        font-size: 2.2rem;\r\n        z-index: 2;\r\n        color: #ffffff; /* Cambiar el color del texto a blanco para que contraste con el fondo rojo */\r\n        position: absolute;\r\n        top: 35%; /* Centrar verticalmente */\r\n        left: 48%; /* Centrar horizontalmente */\r\n        transform: translate(\r\n          -50%,\r\n          -50%\r\n        ); /* Ajustar para que el centro del texto coincida con el centro de la estrella */\r\n      }\r\n      .estrella {\r\n        position: absolute;\r\n        z-index: 1;\r\n        width: 330px;\r\n        height: 330px;\r\n        top: 14px;\r\n        bottom: auto;\r\n        left: 14px;\r\n        right: 0px;\r\n        background-color: var(--estrella-win);\r\n        clip-path: polygon(\r\n          50% 0%,\r\n          67% 28%,\r\n          98% 35%,\r\n          79% 55%,\r\n          93% 100%,\r\n          52% 79%,\r\n          10% 100%,\r\n          23% 60%,\r\n          2% 35%,\r\n          33% 26%\r\n        );\r\n      }\r\n      .estrella2 {\r\n        width: 360px;\r\n        height: 360px;\r\n        background-color: rgb(15, 15, 15);\r\n        clip-path: polygon(\r\n          50% 0%,\r\n          67% 28%,\r\n          98% 35%,\r\n          79% 55%,\r\n          93% 100%,\r\n          52% 79%,\r\n          10% 100%,\r\n          23% 60%,\r\n          2% 35%,\r\n          33% 26%\r\n        );\r\n      }     \r\n      .estrella-invertida{\r\n        transform: rotatex(180deg);  \r\n        background-color: var(--estrella-loser);\r\n     \r\n      } \r\n      .estrella-invertida2{\r\n        transform: rotatex(180deg);  \r\n        background-color: black;\r\n      }   \r\n       `;\r\n  }\r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: \"open\" });\r\n  }\r\n  connectedCallback() {\r\n    this.shadowRoot!.innerHTML = /*HTML*/ `\r\n    <style>${Estrella.style}</style>\r\n    <div class=\"container\">\r\n      <div class=\"estrella\"></div>\r\n      <div class=\"estrella2\"></div>\r\n      <h3 class=\"estrella-text\">Ganaste!</h3>\r\n    </div>\r\n    `;\r\n    // const contenedorEstrella = this.shadowRoot!.querySelector(\".container\");\r\n    if (this.hasAttribute(\"invertida\")) {\r\n      const estrella = this.shadowRoot!.querySelector(\".estrella\");\r\n      const estrella2 = this.shadowRoot!.querySelector(\".estrella2\");\r\n      const estrellaText = this.shadowRoot!.querySelector(\".estrella-text\");\r\n      estrella!.setAttribute(\"class\", \"estrella estrella-invertida\");\r\n      estrella2!.setAttribute(\"class\", \"estrella2 estrella-invertida2\");\r\n      estrellaText!.textContent = \"Perdiste!\";\r\n    }\r\n  }\r\n}\r\ncustomElements.define(\"estrella-el\", Estrella);","class ButtonEl extends HTMLElement {\r\n  static get style() {\r\n    return `\r\n    button {\r\n        font-family: var(--fuente-odibee);\r\n        font-size: 3rem;\r\n        letter-spacing: 0.15rem;\r\n        color: var(--button-font);\r\n        min-width: 380px;\r\n        height: 84px;\r\n        background-color: var(--color-button);\r\n        border: solid 10px var(--color-borderbutton);\r\n        border-radius: 10px;\r\n        transition: ease-in-out 0.25s;\r\n        cursor: pointer;\r\n      }\r\n      button:hover {\r\n        background-color: var(--color-borderbutton);\r\n        border: solid 10px var(--color-button);\r\n      }\r\n    `;\r\n  }\r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: \"open\" });\r\n  }\r\n  connectedCallback() {\r\n    const clase = this.getAttribute(\"class\");\r\n    this.shadowRoot!.innerHTML = `\r\n    <style>${ButtonEl.style}</style>\r\n    <button class=\"${clase}\"><slot></slot></button>\r\n\r\n    `;\r\n  }\r\n}\r\ncustomElements.define(\"button-el\", ButtonEl);","class ScoreEl extends HTMLElement {\r\n  static get style() {\r\n    return `\r\n    .container {\r\n        box-sizing: border-box;\r\n        font-family: var(--fuente-odibee);\r\n        font-size: 1.5rem;\r\n        width: 259px;\r\n        height: 187px;\r\n        background-color: white;\r\n        color: black;\r\n        border: solid 10px black;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        padding: 10px;\r\n        margin: 0;\r\n      }\r\n      .container h3 {\r\n        /* margin: 0; */\r\n        text-align: center;\r\n        letter-spacing: 0.5rem;\r\n        margin-top: 10px;\r\n      }\r\n      .container-p {\r\n        flex-grow: 1;\r\n        width: 100%;\r\n        height: 140px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 10px;\r\n      }\r\n      .p-pc,\r\n      .p-player {\r\n        margin: 0;\r\n        text-align: end;\r\n        letter-spacing: 0.5rem;\r\n      }\r\n    `;\r\n  }\r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: \"open\" });\r\n  }\r\n  connectedCallback() {\r\n    this.shadowRoot!.innerHTML = /*HTML*/ `\r\n    <style>${ScoreEl.style}</style>\r\n    <div class=\"container\">\r\n      <h3>Score</h3>\r\n      <div class=\"container-p\">\r\n        <p class=\"p-player\">Vos: 3</p>\r\n        <p class=\"p-pc\">PC: 3</p>\r\n      </div>\r\n    </div>\r\n    `;\r\n  }\r\n}\r\ncustomElements.define(\"score-el\", ScoreEl);","class TextEl extends HTMLElement {\r\n  tags: string[] = [\"h1\", \"p\"];\r\n  tag: string = \"p\";\r\n  static get style() {\r\n    return ``;\r\n  }\r\n  constructor() {\r\n    super();\r\n    this.attachShadow({ mode: \"open\" });\r\n    if (this.tags.includes(this.getAttribute(\"tag\")!)) {\r\n      this.tag = this.getAttribute(\"tag\") || this.tag;\r\n    }\r\n    console.log(this.tag);\r\n    this.render();\r\n  }\r\n  render() {\r\n    const rootEl = document.createElement(this.tag);\r\n    rootEl.textContent = this.textContent;\r\n    this.shadowRoot!.append(rootEl);\r\n  }\r\n}\r\ncustomElements.define(\"text-el\", TextEl);","// Importar las páginas\r\nimport { initHome } from './pages/inicio/inicio';\r\nimport { initInstrucciones } from './pages/instrucciones/instrucciones.ts';\r\nimport { initJuego } from './pages/juego/juego.ts';\r\nimport { initResultado } from './pages/resultado/resultado.ts';\r\n\r\ntype RouterPath = {\r\n  pathRegex: RegExp;\r\n  render: (params: { goTo: (path: string) => void }) => HTMLElement;\r\n};\r\n\r\nconst BASE_PATH = \"/ppt-local-desafio\";\r\n\r\nfunction isGithubPages() {\r\n  return location.host.includes(\"github.io\");\r\n}\r\n\r\n// Definición de rutas\r\nconst routes: RouterPath[] = [\r\n  { pathRegex: /^\\/inicio$/, render: () => initHome({ goTo }) },\r\n  { pathRegex: /^\\/instrucciones$/, render: () => initInstrucciones({ goTo }) },\r\n  { pathRegex: /^\\/juego$/, render: () => initJuego({ goTo }) },\r\n  { pathRegex: /^\\/resultado$/, render: () => initResultado({ goTo }) },\r\n  { pathRegex: /.*/, render: () => {\r\n      const notFound = document.createElement('div');\r\n      notFound.innerHTML = '<h1>404 - Página no encontrada</h1>';\r\n      return notFound;\r\n    }\r\n  }\r\n];\r\n\r\n// Función para navegar\r\nfunction goTo(path: string) {\r\n  const normalizedPath = path.startsWith(\"/\") ? path : \"/\" + path;\r\n  const completePath = isGithubPages() ? BASE_PATH + normalizedPath : normalizedPath;\r\n  history.pushState({}, \"\", completePath);\r\n  renderPath(completePath);\r\n}\r\n\r\n// Función para renderizar según la ruta\r\nfunction renderPath(path: string): void {\r\n  let adjustedPath = path;\r\n\r\n  if (isGithubPages()) {\r\n    // Quitar BASE_PATH al inicio\r\n    if (adjustedPath.startsWith(BASE_PATH)) {\r\n      adjustedPath = adjustedPath.slice(BASE_PATH.length);\r\n    }\r\n    // Asegurar slash inicial\r\n    if (!adjustedPath.startsWith(\"/\")) adjustedPath = \"/\" + adjustedPath;\r\n  }\r\n\r\n  // Quitar trailing slash\r\n  adjustedPath = adjustedPath.replace(/\\/$/, \"\");\r\n\r\n  const route = routes.find(r => r.pathRegex.test(adjustedPath));\r\n\r\n  if (route) {\r\n    const app = document.getElementById(\"app\");\r\n    if (app) {\r\n      app.innerHTML = \"\";\r\n      app.appendChild(route.render({ goTo }));\r\n    }\r\n  } else {\r\n    console.warn(`El path '${adjustedPath}' no fue encontrado.`);\r\n  }\r\n}\r\n\r\n// Inicializa router al cargar la página\r\nfunction initRouter(): void {\r\n  const pathname = location.pathname.replace(/\\/$/, \"\");\r\n\r\n  if (isGithubPages() && (pathname === BASE_PATH || pathname === BASE_PATH + \"/\")) {\r\n    goTo(\"/inicio\");\r\n  } else if (!isGithubPages() && (pathname === \"\" || pathname === \"/\")) {\r\n    goTo(\"/inicio\");\r\n  } else {\r\n    renderPath(pathname);\r\n  }\r\n\r\n  // Escucha cambios del historial\r\n  window.addEventListener(\"popstate\", () => renderPath(location.pathname));\r\n}\r\n\r\nexport { initRouter, goTo };\r\n","import \"../../components/button/button\";\r\n\r\nexport function initHome(params: { goTo: (arg: string) => void }) {\r\n  const div: HTMLDivElement = document.createElement(\"div\");\r\n  div.innerHTML = `\r\n  <style>\r\n  .contenedor{\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  .title {\r\n    margin-top: 20px;\r\n    margin-bottom: 25px;\r\n    padding: 20px;\r\n    width: 380px;\r\n    height: 330px;\r\n    overflow-wrap: anywhere;\r\n  }\r\n  .title h1 {\r\n    text-align: center;\r\n    margin: 0;\r\n    font-family: var(--fuente-odibee);\r\n    letter-spacing: 0.25rem;\r\n    font-size: 5.5rem;\r\n    color: var(--color-h1);\r\n  }\r\n  \r\n  .title h1 span {\r\n    color: #0090485a;\r\n  }\r\n  .div-button{\r\n    height: 100px;    \r\n  }\r\n  .container-manos {\r\n    padding: 0 10px;\r\n    min-width: 370px;\r\n    position: fixed;\r\n    display: flex;\r\n    bottom: -40px;\r\n    flex-direction: row;\r\n    gap: 40px;\r\n  }\r\n  .container-manos img {\r\n    width: 100px;\r\n    height: 250px;\r\n  }\r\n  </style>\r\n  <div class=\"contenedor\">\r\n  <div class=\"title\">\r\n  <h1>\r\n    Piedra<br />\r\n    Papel <span>ó</span> <br />Tijera\r\n  </h1>\r\n</div>\r\n<div class=\"div-button\">\r\n<button-el>Empezar!</button-el>\r\n</div>\r\n<div class=\"container-manos\">\r\n  <img src=\"/ppt-local/assets/papel.svg\" alt=\"\" />\r\n  <img src=\"/ppt-local/assets/piedra.svg\" alt=\"\" />\r\n  <img src=\"/ppt-local/assets/tijera.svg\" alt=\"\" />\r\n</div>\r\n</div>\r\n  `;\r\n  const buttonEl = div.querySelector(\"button-el\");\r\n\r\n  buttonEl?.addEventListener(\"click\", () => {\r\n    params.goTo(\"/instrucciones\");\r\n  });\r\n\r\n  return div;\r\n}","import { state } from \"../../state.ts\";\r\n\r\nexport function initInstrucciones(params: { goTo: (arg: string) => void }) {\r\n  let div = document.createElement(\"div\");\r\n  div.innerHTML = /*html*/ `\r\n  <style>\r\n    .container {\r\n      height: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.div-text {\r\n  width: 317px;\r\n  height: 380px;\r\n}\r\n.div-text-p {\r\n  font-family: var(--fuente-odibee);\r\n  font-size: 2.7rem;\r\n  letter-spacing: 0.11rem;\r\n  font-weight: 800;\r\n  text-align: center;\r\n}\r\n.div-button {\r\n  \r\n  height: 100px;\r\n}\r\n.container-manos {\r\n  padding: 0 10px;\r\n  min-width: 370px;\r\n  position: fixed;\r\n  display: flex;\r\n  bottom: -40px;\r\n  flex-direction: row;\r\n  gap: 40px;\r\n}\r\n.container-manos img {\r\n  width: 100px;\r\n  height: 250px;\r\n}\r\n</style>\r\n  <div class=\"container\">\r\n      <div class=\"div-text\">\r\n        <p class=\"div-text-p\">\r\n          Presioná jugar y elegí: piedra, papel o tijera antes de que pasen los\r\n          3 segundos. <br> El primero en llegar a 2 puntos gana el juego\r\n        </p>\r\n      </div>\r\n      <div class=\"button\">\r\n        <button-el>Jugar!</button-el>\r\n      </div>\r\n      <div class=\"container-manos\">\r\n        <img src=\"/ppt-local/assets/papel.svg\"/>\r\n        <img src=\"/ppt-local/assets/piedra.svg\"/>\r\n        <img src=\"/ppt-local/assets/tijera.svg\"/>\r\n      </div>\r\n  </div>\r\n  `;\r\n  const buttonEl = div.querySelector(\"button-el\");\r\n\r\n  state.data.scores.pcScore = 0;\r\n  state.data.scores.myScore = 0;\r\n\r\n  buttonEl?.addEventListener(\"click\", () => {\r\n    params.goTo(\"/juego\");\r\n  });\r\n  return div;\r\n}","export type Move = \"rock\" | \"paper\" | \"scissors\";\r\n\r\ntype Game = {\r\n  clientMove: Move,\r\n  pcMove: Move\r\n};\r\n\r\nconst state = {\r\n  data: {\r\n    currentGame: {\r\n      clientMove: null as Move | null,\r\n      pcMove: null as Move | null,\r\n    },\r\n    historyByTurn: [] as Game[],\r\n    scores: {\r\n      myScore: 0,\r\n      pcScore: 0,\r\n    },\r\n  },\r\n\r\n  subscribers: [] as Function[],\r\n\r\n  subscribe(callback: Function) {\r\n    this.subscribers.push(callback);\r\n  },\r\n\r\n  getState() {\r\n    return this.data;\r\n  },\r\n\r\n  setState(newState: Partial<typeof state.data>) {\r\n    this.data = {\r\n      ...this.data,\r\n      ...newState,\r\n      currentGame: {\r\n        ...this.data.currentGame,\r\n        ...(newState.currentGame || {}),\r\n      },\r\n      scores: {\r\n        ...this.data.scores,\r\n        ...(newState.scores || {}),\r\n      },\r\n    };\r\n\r\n    this.subscribers.forEach(callback => callback(this.data));\r\n\r\n    // ✅ Guardar siempre en localStorage\r\n    this.saveToLocalStorage();\r\n  },\r\n\r\n  setMoves(move: Move) {\r\n    const pcMove = this.getRandomMove();\r\n    this.setState({\r\n      currentGame: {\r\n        clientMove: move,\r\n        pcMove,\r\n      },\r\n    });\r\n  },\r\n\r\n  getRandomMove(): Move {\r\n    const moves: Move[] = [\"rock\", \"paper\", \"scissors\"];\r\n    return moves[Math.floor(Math.random() * moves.length)];\r\n  },\r\n\r\n  pushToHistory(turn: Game) {\r\n    const newHistory = [...this.data.historyByTurn, turn];\r\n    this.setState({ historyByTurn: newHistory });\r\n  },\r\n\r\n  getWinner(clientMove: Move, pcMove: Move) {\r\n    if (clientMove === pcMove) return \"tie\";\r\n\r\n    const winsAgainst: Record<Move, Move> = {\r\n      rock: \"scissors\",\r\n      paper: \"rock\",\r\n      scissors: \"paper\",\r\n    };\r\n\r\n    if (winsAgainst[clientMove] === pcMove) {\r\n      return \"clientWins\";\r\n    } else {\r\n      return \"pcWins\";\r\n    }\r\n  },\r\n\r\n  playGame(playerChoice: Move) {\r\n    if (this.data.currentGame.pcMove === null) return; // seguridad\r\n\r\n    const winner = this.getWinner(playerChoice, this.data.currentGame.pcMove);\r\n\r\n    if (winner === \"clientWins\") {\r\n      this.setState({\r\n        scores: {\r\n          myScore: this.data.scores.myScore + 1,\r\n        },\r\n      });\r\n    } else if (winner === \"pcWins\") {\r\n      this.setState({\r\n        scores: {\r\n          pcScore: this.data.scores.pcScore + 1,\r\n        },\r\n      });\r\n    }\r\n  },\r\n\r\n  saveToLocalStorage() {\r\n    localStorage.setItem('gameState', JSON.stringify(this.data));\r\n  },\r\n\r\n  loadFromLocalStorage() {\r\n    const savedState = localStorage.getItem('gameState');\r\n    if (savedState) {\r\n      this.data = JSON.parse(savedState);\r\n      this.subscribers.forEach(callback => callback(this.data));\r\n    }\r\n  },\r\n\r\n  // ✅ Método para reiniciar scores solo cuando vos quieras\r\n  resetScores() {\r\n    this.setState({\r\n      scores: { myScore: 0, pcScore: 0 },\r\n    });\r\n  }\r\n};\r\n\r\nexport { state };\r\n","import { state, Move } from \"../../state.ts\";\r\n\r\nexport function initJuego(params: { goTo: (arg: string) => void }) {\r\n  const divEl: HTMLDivElement = document.createElement(\"div\");\r\n  divEl.innerHTML = /*HTML */ `\r\n    <style>\r\n      /* Estilos como los que tenías anteriormente */\r\n      .principal {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        \r\n      }\r\n      .progressbar-container {\r\n        width: 400px;\r\n        height: 400px;\r\n        margin: 0px auto;\r\n      }\r\n      .progressbar-container .outer-box {\r\n        border-radius: 50%;\r\n        background-color: transparent;\r\n        width: 400px;\r\n        height: 400px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n      }\r\n      .progressbar-container .inner-box {\r\n        font-size: 12rem;\r\n        font-weight: 900;\r\n        width: 180px;\r\n        height: 0px;\r\n        border-radius: 50%;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n      }\r\n      .progressbar-container svg {\r\n        position: absolute;\r\n      }\r\n      .progressbar-container circle {\r\n        fill: none;\r\n        stroke: url(#gradientColor);\r\n        stroke-width: 30px;\r\n        stroke-dasharray: 1040;\r\n        stroke-dashoffset: 1040;\r\n        animation: loading 3.3s linear forwards;\r\n      }\r\n      @keyframes loading {\r\n        100% {\r\n          stroke-dashoffset: 0;\r\n        }\r\n      }\r\n      .elige {\r\n        font-size: 2rem;\r\n        font-family: var(--fuente-odibee);\r\n        text-align: center;\r\n        margin: 0;\r\n      }\r\n      .my-score, .computer-score {font-family: var(--fuente-odibee);}\r\n      .container-manos {\r\n        position: fixed;\r\n        bottom: -80px;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        max-width: 450px;\r\n      }\r\n      .general {\r\n        border: none;\r\n        background-color: transparent;\r\n        cursor: pointer;\r\n        width: 150px;\r\n        height: 300px;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n      }\r\n      .piedra, .papel, .tijera {\r\n        width: 100px;\r\n        height: 300px;\r\n       \r\n        \r\n        width: 100px;\r\n        height: 300px;\r\n        transform: scale(1) translateY(0); /* Estado inicial */\r\n        transition: transform 0.3s ease-in-out; /* Transición suave para ambas transformaciones */ \r\n          }\r\n        .general:hover .piedra,\r\n        .general:hover .papel,\r\n        .general:hover .tijera {\r\n          transform: scale(1.2) translateY(-40px); /* Se agranda un 20% al hacer click */\r\n        }\r\n        .piedra.active,\r\n        .papel.active,\r\n        .tijera.active {\r\n          transform: scale(1.2) translateY(-40px); /* Se agranda un 20% al hacer click */\r\n        }\r\n        .general .piedra,\r\n        .general .papel,\r\n        .general .tijera {\r\n           transition: transform 0.3s ease-in-out;\r\n        }\r\n\r\n        .general.active .piedra,\r\n        .general.active .papel,\r\n        .general.active .tijera {\r\n          transform: scale(1.2) translateY(-40px); /* Se mantiene desplazada */\r\n          }\r\n        .secundario {\r\n        width: 100%;\r\n        height: 100vh;\r\n        display: none;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n      }\r\n      .div-img-maquina, .div-img-jugador {\r\n        width: 400px;\r\n        height: 400px;\r\n      }\r\n      .div-img-maquina {\r\n        width: 400px;\r\n        height: 400px;\r\n        transform: rotate(180deg);\r\n      }\r\n      .imagen-maquina, .imagen-jugador {\r\n        width: 400px;\r\n        height: 400px;\r\n      }\r\n      .my-score, .computer-score {\r\n        font-size: 2rem;\r\n      }\r\n    </style>\r\n    <div class=\"principal\">\r\n      <div class=\"progressbar-container\">\r\n        <div class=\"outer-box\">\r\n          <div class=\"inner-box\">3</div>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"400\" height=\"400\">\r\n            <defs>\r\n              <linearGradient id=\"gradientColor\">\r\n                <stop offset=\"0%\" stop-color=\"#006cfc\" />\r\n                <stop offset=\"100%\" stop-color=\"#001997\" />\r\n              </linearGradient>\r\n            </defs>\r\n            <circle cx=\"200\" cy=\"200\" r=\"160\" stroke-linecap=\"round\" />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n      <h3 class=\"elige\">Elige tu jugada antes de que se termina el tiempo!</h3>\r\n      <div class=\"container-manos\">\r\n        <button class=\"general\">\r\n          <img class=\"piedra\" src=\"/ppt-local/assets/piedra.svg\" alt=\"\" />\r\n        </button>\r\n        <button class=\"general\" >\r\n          <img class=\"papel\" src=\"/ppt-local/assets/papel.svg\" alt=\"\" />\r\n        </button>\r\n        <button class=\"general\" >\r\n          <img class=\"tijera\" src=\"/ppt-local/assets/tijera.svg\" alt=\"\" />\r\n        </button>\r\n      </div>\r\n      <div class=\"my-score\">Jugador: <span></span></div>\r\n      <div class=\"computer-score\"> Computadora: <span></span></div>\r\n    </div>\r\n    <div class=\"secundario\">\r\n      <div class=\"div-img-maquina\">\r\n        <img class=\"imagen-maquina\" src=\"/ppt-local/assets/papel.svg\" alt=\"\" />\r\n      </div>\r\n      \r\n      <div class=\"div-img-jugador\">\r\n        <img class=\"imagen-jugador\" src=\"/ppt-local/assets/papel.svg\" alt=\"\" />\r\n      </div>\r\n    </div>\r\n  `;\r\n\r\n  // Aquí empieza la lógica\r\n  const botonPiedra: HTMLImageElement = divEl.querySelector(\r\n  \".container-manos button img.piedra\"\r\n)!;\r\nconst botonPapel: HTMLImageElement = divEl.querySelector(\r\n  \".container-manos button img.papel\"\r\n)!;\r\nconst botonTijera: HTMLImageElement = divEl.querySelector(\r\n  \".container-manos button img.tijera\"\r\n)!;\r\n\r\nconst divPrincipal: HTMLElement = divEl.querySelector(\".principal\")!;\r\nconst divSecundario: HTMLElement = divEl.querySelector(\".secundario\")!;\r\nconst imagenPc: HTMLImageElement = divEl.querySelector(\".imagen-maquina\")!;\r\nconst imagenJugador: HTMLImageElement = divEl.querySelector(\".imagen-jugador\")!;\r\n\r\n// ✅ Elementos del score\r\nconst myScoreEl = divEl.querySelector(\".my-score span\")!;\r\nconst computerScoreEl = divEl.querySelector(\".computer-score span\")!;\r\n\r\n// Suscripción al state\r\nstate.subscribe(() => {\r\n  const currentState = state.getState();\r\n  myScoreEl.textContent = currentState.scores.myScore.toString();\r\n  computerScoreEl.textContent = currentState.scores.pcScore.toString();\r\n});\r\n\r\n// ✅ Refresh inicial de scores apenas se monta la vista\r\n(() => {\r\n  const currentState = state.getState();\r\n  myScoreEl.textContent = currentState.scores.myScore.toString();\r\n  computerScoreEl.textContent = currentState.scores.pcScore.toString();\r\n})();\r\n\r\nfunction handleMoveSelection(jugada: Move) {\r\n  state.setMoves(jugada);\r\n  const pcMove = state.data.currentGame.pcMove;\r\n\r\n  imagenPc.src = `/ppt-local/assets/${pcMove}.svg`;\r\n  imagenJugador.src = `/ppt-local/assets/${jugada}.svg`;\r\n  state.playGame(jugada);\r\n\r\n  const botones = divEl.querySelectorAll(\r\n    \".general\"\r\n  ) as NodeListOf<HTMLButtonElement>;\r\n\r\n  botones.forEach((boton) => boton.classList.remove(\"active\"));\r\n  const botonSeleccionado = divEl.querySelector(\r\n    `.general img.${jugada}`\r\n  )?.parentElement;\r\n  if (botonSeleccionado) {\r\n    botonSeleccionado.classList.add(\"active\");\r\n  }\r\n\r\n  botones.forEach((boton) => {\r\n    boton.disabled = true;\r\n    boton.style.pointerEvents = `none`;\r\n  });\r\n}\r\n\r\nsetTimeout(() => {\r\n  const currentState = state.getState();\r\n\r\n  if (currentState.scores.pcScore == 2 || currentState.scores.myScore == 2) {\r\n    params.goTo(\"/resultado\");\r\n  } else {\r\n    params.goTo(\"/juego\");\r\n  }\r\n}, 5000);\r\n\r\n// Listeners de los botones\r\nbotonPiedra.addEventListener(\"click\", () => handleMoveSelection(\"rock\"));\r\nbotonPapel.addEventListener(\"click\", () => handleMoveSelection(\"paper\"));\r\nbotonTijera.addEventListener(\"click\", () => handleMoveSelection(\"scissors\"));\r\n\r\nfunction actualizarContador() {\r\n  const contador: HTMLElement = document.querySelector(\".inner-box\")!;\r\n  let valorActual = Number(contador!.innerText);\r\n\r\n  if (valorActual > -2) {\r\n    contador.innerText = (valorActual - 1).toString();\r\n  }\r\n\r\n  if (valorActual <= 0) {\r\n    divSecundario.style.display = \"flex\";\r\n    divPrincipal.style.display = \"none\";\r\n    clearInterval(intervalo);\r\n  }\r\n}\r\n\r\nconst intervalo = setInterval(actualizarContador, 1000);\r\n\r\nreturn divEl;\r\n}","import { state } from \"../../state.ts\";\r\n\r\nexport function initResultado(params: { goTo: (arg: string) => void }) {\r\n  const divEl = document.createElement(\"div\");\r\n  divEl.innerHTML = /*HTML */ `\r\n  <style>.ganaste {\r\n  /* display: none; */\r\n  height: 100vh;\r\n  background-color: var(--background-win);\r\n  display: none;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 20px;\r\n}\r\n.container {\r\n  box-sizing: border-box;\r\n  font-family: var(--fuente-odibee);\r\n  font-size: 1.5rem;\r\n  width: 259px;\r\n  height: 187px;\r\n  background-color: white;\r\n  color: black;\r\n  border: solid 10px black;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding: 10px;\r\n  margin: 0;\r\n}\r\n.container h3 {\r\n  /* margin: 0; */\r\n  text-align: center;\r\n  letter-spacing: 0.5rem;\r\n }\r\n.container-p {\r\n  flex-grow: 1;\r\n  width: 100%;\r\n  height: 140px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n.p-maquina,\r\n.p-persona {\r\n  margin: 0;\r\n  text-align: end;\r\n  letter-spacing: 0.5rem;\r\n}\r\n/*  */\r\n.perdiste {\r\n  height: 100vh;\r\n  background-color: var(--background-loser);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  gap: 10px;\r\n  padding-bottom: 50px;\r\n}\r\n.contenedor {\r\n  box-sizing: border-box;\r\n  font-family: var(--fuente-odibee);\r\n  font-size: 1.5rem;\r\n  width: 259px;\r\n  height: 187px;\r\n  background-color: white;\r\n  color: black;\r\n  border: solid 10px black;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding: 10px;\r\n  margin: 0;\r\n}\r\n.contenedor h3 {\r\n  text-align: center;\r\n  letter-spacing: 0.5rem;\r\n  margin-top: 10px;\r\n}\r\n.contenedor-p {\r\n  flex-grow: 1;\r\n  width: 100%;\r\n  height: 140px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n.parrafo-maquina,\r\n.parrafo-persona {\r\n  margin: 0;\r\n  text-align: end;\r\n  letter-spacing: 0.5rem;\r\n}\r\n  </style>\r\n  <div class=\"ganaste\">\r\n  <estrella-el></estrella-el>\r\n  <div class=\"container\">\r\n    <h3>Score</h3>\r\n    <div class=\"container-p\">\r\n      <p class=\"p-persona\">Vos: 3</p>\r\n      <p class=\"p-maquina\">Maquina: 3</p>\r\n    </div>\r\n  </div>\r\n   <button-el>Volver a Jugar!</button-el>  \r\n   <!--   <button-el>Ir al Inicio!</button-el>\r\n  -->\r\n  </div>\r\n  <!--  -->\r\n  <div class=\"perdiste\">\r\n  <estrella-el invertida></estrella-el>\r\n  <div class=\"contenedor\">\r\n    <h3>Score</h3>\r\n    <div class=\"contenedor-p\">\r\n    <p class=\"parrafo-persona\">Vos: 3</p>\r\n    <p class=\"parrafo-maquina\">Maquina: 3</p>\r\n    </div>\r\n    </div>\r\n    <button-el class=\"volver-jugar\">Volver a Jugar!</button-el>\r\n    <!-- <button-el>Ir al Inicio!</button-el>  -->\r\n\r\n  \r\n</div>\r\n  `;\r\n\r\n  const volverAlInicio = divEl.querySelector(\"button-el\")!;\r\n\r\n  volverAlInicio.addEventListener(\"click\", () => {\r\n    params.goTo(\"/inicio\");\r\n  });\r\n  const volverAlInicioDos = divEl.querySelector(\".volver-jugar\")!;\r\n\r\n  volverAlInicioDos.addEventListener(\"click\", () => {\r\n    params.goTo(\"/inicio\");\r\n  });\r\n\r\n  // localStorage.removeItem(\"saved-state\");\r\n  let newCurrentState = state.getState();\r\n  const pPersona = divEl.querySelector(\".p-persona\")!;\r\n  pPersona.textContent = `Vos: ${newCurrentState.scores.myScore}`;\r\n\r\n  const pMaquina = divEl.querySelector(\".p-maquina\")!;\r\n  pMaquina.textContent = `Maquina: ${newCurrentState.scores.pcScore}`;\r\n\r\n  const parrafoPersona = divEl.querySelector(\".parrafo-persona\")!;\r\n  parrafoPersona.textContent = `Vos: ${newCurrentState.scores.myScore}`;\r\n  const parrafoMaquina = divEl.querySelector(\".parrafo-maquina\")!;\r\n  parrafoMaquina.textContent = `Maquina: ${newCurrentState.scores.pcScore}`;\r\n\r\n  // Suponiendo que tienes una variable que indica si el jugador ganó o perdió\r\n  let juegoGanado;\r\n\r\n  if (newCurrentState.scores.pcScore > newCurrentState.scores.myScore) {\r\n    juegoGanado = false;\r\n  } else {\r\n    juegoGanado = true;\r\n  }\r\n\r\n  const mostrarDivGanaste: HTMLDivElement = divEl.querySelector(\".ganaste\")!;\r\n  const mostrarDivPerdiste: HTMLDivElement = divEl.querySelector(\".perdiste\")!;\r\n\r\n  if (juegoGanado) {\r\n    mostrarDivGanaste!.style.display = \"flex\"; // Muestra el div de ganaste\r\n    mostrarDivPerdiste!.style.display = \"none\"; // Oculta el div de perdido\r\n  } else {\r\n    mostrarDivGanaste!.style.display = \"none\"; // Oculta el div de ganado\r\n    mostrarDivPerdiste!.style.display = \"flex\"; // Muestra el div de perdido\r\n  }\r\n\r\n  return divEl;\r\n}"],"names":["$5adc3fffbb88e8b9$var$Estrella","HTMLElement","style","attachShadow","mode","connectedCallback","shadowRoot","innerHTML","hasAttribute","estrella","querySelector","estrella2","estrellaText","setAttribute","textContent","customElements","define","$29582e87b2b7e4fd$var$ButtonEl","clase","getAttribute","$8e53913ea5888066$var$ScoreEl","$4b0752ccf955da36$var$TextEl","tags","tag","includes","console","log","render","rootEl","document","createElement","append","$0b89d474933103bc$export$ca000e230c0caa3e","data","currentGame","clientMove","pcMove","historyByTurn","scores","myScore","pcScore","subscribers","subscribe","callback","push","getState","setState","newState","forEach","saveToLocalStorage","setMoves","move","getRandomMove","moves","Math","floor","random","length","pushToHistory","turn","newHistory","getWinner","winsAgainst","rock","paper","scissors","playGame","playerChoice","winner","localStorage","setItem","JSON","stringify","loadFromLocalStorage","savedState","getItem","parse","resetScores","$e817d3341cf3ea9c$var$BASE_PATH","$e817d3341cf3ea9c$var$isGithubPages","location","host","$e817d3341cf3ea9c$var$routes","pathRegex","params","div","buttonEl","addEventListener","goTo","$e817d3341cf3ea9c$export$95e8d77caafa3e06","divEl","botonPiedra","botonPapel","botonTijera","divPrincipal","divSecundario","imagenPc","imagenJugador","myScoreEl","computerScoreEl","currentState","toString","handleMoveSelection","jugada","src","botones","querySelectorAll","boton","classList","remove","botonSeleccionado","parentElement","add","disabled","pointerEvents","setTimeout","intervalo","setInterval","contador","valorActual","Number","innerText","display","clearInterval","juegoGanado","volverAlInicio","volverAlInicioDos","newCurrentState","pPersona","pMaquina","parrafoPersona","parrafoMaquina","mostrarDivGanaste","mostrarDivPerdiste","notFound","path","normalizedPath","startsWith","completePath","history","pushState","$e817d3341cf3ea9c$var$renderPath","adjustedPath","slice","replace","route","find","r","test","app","getElementById","appendChild","warn","Error","pathname","window"],"version":3,"file":"ppt-local.75d63a30.js.map"}